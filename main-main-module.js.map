{"version":3,"sources":["webpack:///./src/app/main/canvas/canvas.component.css","webpack:///./src/app/main/canvas/canvas.component.html","webpack:///./src/app/main/canvas/canvas.component.ts","webpack:///./src/app/main/main-routing.module.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/main/main.module.ts"],"names":[],"mappings":"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","file":"main-main-module.js","sourcesContent":["module.exports = \"img {\\r\\n    background: #F1F1FA;\\r\\n    width: 400px;\\r\\n    height: 300px;\\r\\n    display: block;\\r\\n    margin: 10px auto;\\r\\n    border: 0;\\r\\n  }\"","module.exports = \"<!-- <div style=\\\"height: 200px !important;overflow-y: auto;\\\" id=\\\"notifications-list\\\" (scroll)=\\\"scrollHandler($event)\\\"\\n  droppable>\\n  <p>\\n    canvas works!\\n  </p>\\n  <p>\\n    canvas works!\\n  </p>\\n  <p>\\n    canvas works!\\n  </p>\\n  <p>\\n    canvas works!\\n  </p>\\n  <p>\\n    canvas works!\\n  </p>\\n  <p>\\n    canvas works!\\n  </p>\\n  <p>\\n    canvas works!\\n  </p>\\n  <p>\\n    canvas works!\\n  </p>\\n</div> -->\\n<!-- <button (click)=\\\"openPopup()\\\">Add</button>\\n<ng-template #addNum let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\"> <Strong>Add numbers\\n      </Strong><br>\\n    </h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('close')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <p>\\n      Hi\\n    </p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-action\\\" data-dismiss=\\\"modal\\\" (click)=\\\"d('close')\\\">Cancel</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-action\\\" (click)=\\\"d('close')\\\">\\n      Proceed\\n    </button>\\n  </div>\\n</ng-template>\\n<h3>Transfer Data via Drag Drop</h3>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-3\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li draggable *ngFor=\\\"let item of items\\\" [dragData]=\\\"item\\\" class=\\\"list-group-item\\\">{{item.name}}</li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"col-sm-3\\\">\\n    <div class=\\\"panel panel-default\\\" droppable (onDrop)=\\\"onItemDrop($event)\\\">\\n      <div class=\\\"panel-heading\\\">Drop Items here</div>\\n      <div class=\\\"panel-body\\\">\\n        <li *ngFor=\\\"let item of droppedItems\\\" class=\\\"list-group-item\\\">{{item.name}}</li>\\n      </div>\\n    </div>\\n  </div>\\n</div>-->\\n<!-- <button (click)=\\\"open()\\\">Open new popup window</button>  -->\\n<div class=\\\"jumbotron\\\">\\n  <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 offset-md-3\\\">\\n              <h3>Angular 6 Reactive Form Validation</h3>\\n              <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <label>First Name</label>\\n                      <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\" />\\n                      <div *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n                          <div *ngIf=\\\"f.firstName.errors.required\\\">First Name is required</div>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label>Last Name</label>\\n                      <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\" />\\n                      <div *ngIf=\\\"submitted && f.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\n                          <div *ngIf=\\\"f.lastName.errors.required\\\">Last Name is required</div>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label>Email</label>\\n                      <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" />\\n                      <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                          <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                          <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address</div>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label>Password</label>\\n                      <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n                      <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                          <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n                          <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least 6 characters</div>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <button class=\\\"btn btn-primary\\\">Register</button>\\n                  </div>\\n              </form>\\n          </div>\\n      </div>\\n  </div>\\n</div>\\n<!-- <div class=\\\"jumbotron\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 offset-md-3\\\">\\n        <h1>Template driven form</h1>\\n        <form #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"onsubmit()\\\">\\n          <p>\\n            <label>Name: </label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"name1\\\" name=\\\"namee\\\" #namee = \\\"ngModel\\\" required>\\n          </p>\\n          <div>\\n            <label>Password: </label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"password1\\\" name=\\\"password\\\" #password = \\\"ngModel\\\" required>\\n            <div *ngIf=\\\"submitted && password.invalid\\\">\\n                Password is mandatory\\n            </div>\\n          </div>\\n          <p>\\n            <button type=\\\"submit\\\" >Submit</button>\\n          </p>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div> -->\\n<!-- <div style=\\\"height: 1000px !important;overflow-y: auto;\\\" (scroll)=\\\"scrollHandler($event)\\\">\\n  <img src=\\\"https://ik.imagekit.io/demo/img/image1.jpeg?tr=w-400,h-300\\\" />\\n  <img src=\\\"https://ik.imagekit.io/demo/img/image2.jpeg?tr=w-400,h-300\\\" />\\n  <img src=\\\"https://ik.imagekit.io/demo/img/image3.jpg?tr=w-400,h-300\\\" />\\n  <img class=\\\"lazy\\\" data-src=\\\"https://ik.imagekit.io/demo/img/image4.jpeg?tr=w-400,h-300\\\" />\\n  <img class=\\\"lazy\\\" data-src=\\\"https://ik.imagekit.io/demo/img/image5.jpeg?tr=w-400,h-300\\\" />\\n  <img class=\\\"lazy\\\" data-src=\\\"https://ik.imagekit.io/demo/img/image6.jpeg?tr=w-400,h-300\\\" />\\n  <img class=\\\"lazy\\\" data-src=\\\"https://ik.imagekit.io/demo/img/image7.jpeg?tr=w-400,h-300\\\" />\\n  <img class=\\\"lazy\\\" data-src=\\\"https://ik.imagekit.io/demo/img/image8.jpeg?tr=w-400,h-300\\\" />\\n  <img class=\\\"lazy\\\" data-src=\\\"https://ik.imagekit.io/demo/img/image9.jpeg?tr=w-400,h-300\\\" />\\n  <img class=\\\"lazy\\\" data-src=\\\"https://ik.imagekit.io/demo/img/image10.jpeg?tr=w-400,h-300\\\" />\\n</div> -->\\n\"","import { HeaderComponent } from './../../dashboard/header/header.component';\nimport { Component, Injector, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap'\nimport { Overlay } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { createInjector } from 'src/app/shared/create-injector';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-canvas',\n  templateUrl: './canvas.component.html',\n  styleUrls: ['./canvas.component.css']\n})\nexport class CanvasComponent implements OnInit {\n  @ViewChild('addNum') addNum;\n  registerForm: FormGroup;\n  public overlayRef: any;\n  public imgs;\n  public imgOptions = {}\n  public name1;\n  public password1;\n  public myInput;\n  public arr =[]\n  public modal_options: NgbModalOptions = {\n    size: 'lg',\n    backdrop: 'static'\n  };\n  submitted = false;\n  public droppedItems = [{ name: \"Car\", type: \"vege\" },]\n  public items = [\n    { name: \"Apple\", type: \"fruit\" },\n    { name: \"Carrot\", type: \"vegetable\" },\n    { name: \"Orange\", type: \"fruit\" }];\n\n  onItemDrop(e: any) {\n    // Get the dropped data here\n    this.droppedItems.push(e.dragData);\n  }\n  constructor(private modalService: NgbModal, private overlay: Overlay, private injector: Injector, private http: HttpClient, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    // this.imgs  = document.querySelectorAll('[data-src]')\n    // this.onsubmit()\n    // this.getData();\n    // let a = [2, 3, 4]\n    // let bb = deepCopy(a)\n    // a.push(33)\n    // console.log(bb)\n    // console.log(a)\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  openPopup() {\n    // this.modalService.open(this.addNum,this.modal_options);\n    const positionStrategy = this.overlay.position()\n      .global()\n      .centerHorizontally()\n      .centerVertically();\n\n    const overlayRef = this.overlay.create({\n      hasBackdrop: false,\n      scrollStrategy: this.overlay.scrollStrategies.block(),\n      positionStrategy\n    });\n    const injector = createInjector({\n      data: {\n        'val': true\n      }\n    }, this.injector);\n    this.overlayRef = overlayRef;\n    const dialog = new ComponentPortal(HeaderComponent, null, injector);\n    const componentRef = overlayRef.attach(dialog);\n    overlayRef.backdropClick().subscribe(_ => overlayRef.dispose());\n  }\n  scrollHandler() {\n    console.log(\"hiii\")\n    \n    setTimeout(() => {\n      this.loadss()\n    }, 200);\n  }\n  getData() {\n    // let url = \"assets/jsons/demo.json\"\n    // this.http.get(url).subscribe(data =>{console.log(data)})\n    let url = \"assets/files/ex.txt\"\n    this.http.get(url, { responseType: 'text' }).subscribe(data => { console.log(data) })\n  }\n  open() {\n    const height = 400;\n    const width = 400;\n    const left = (window.screen.width / 2) - ((width / 2) + 10);\n    const top = (window.screen.height / 2) - ((height / 2) + 50);\n\n    const fluxaloginObj = open(\"http://google.com\", 'popUpWindow','status=no,height=' + height + ',width=' + width + ',resizable=yes,left='\n      + left + ',top=' + top + ',screenX=' + left + ',screenY='\n      + top + ',toolbar=no,menubar=no,scrollbars=no,location=no,directories=no');\n    // window.open('http://google.com','popUpWindow','height=500,width=400,left=100,top=100,resizable=yes,scrollbars=yes,toolbar=yes,menubar=no,location=no,directories=no, status=yes');\n  }\n  get f() { return this.registerForm.controls; }\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.registerForm.value))\n  }\n  // onsubmit() {\n  //   this.submitted = true;\n  //   console.log(\"submitted\");\n  // }\n  public imgObserver = new IntersectionObserver((entries,imgObserver) => {\n    entries.forEach(entry => {\n      if(!entry.isIntersecting){\n        return;\n      } else {\n        this.preloadImg(entry.target);\n        imgObserver.unobserve(entry.target)\n      }\n    })\n\n  })\n  preloadImg(img){\n    let src = img.getAttribute('data-src')\n    if(!src){\n      return;\n    }\n    img.src = src\n  }\n  loadss(){\n    for(let i =0; i<this.imgs.length;i++)\n      this.imgObserver.observe(this.imgs[i])\n  }\n}\n","import { CanvasComponent } from './canvas/canvas.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'canvas',\n    pathMatch: 'full'\n  },\n  { path: 'canvas', component: CanvasComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MainRoutingModule { }\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, createInjector, OnInit, ViewChild } from '@angular/core';\n// import {Overlay} '@angular/cdk/overlay'\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MainRoutingModule } from './main-routing.module';\nimport { MainComponent } from './main.component';\nimport { CanvasComponent } from './canvas/canvas.component';\nimport { HomeComponent } from '../dashboard/home/home.component';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n// import { OverlayModule } from '@angular/cdk/overlay';\nimport { NgDragDropModule } from 'ng-drag-drop';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MainRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DashboardModule,\n    // OverlayModule\n    NgDragDropModule.forRoot()\n  ],\n  declarations: [MainComponent, CanvasComponent],\n  entryComponents:[HomeComponent],\n})\nexport class MainModule { }\n"],"sourceRoot":""}